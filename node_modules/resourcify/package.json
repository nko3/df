{
  "name": "resourcify",
  "version": "0.1.1",
  "description": "browserify.require() for templates and other resources",
  "keywords": [
    "browserify",
    "view",
    "template",
    "resource"
  ],
  "devDependencies": {
    "eco": "1.1.x",
    "ejs": "0.8.x",
    "handlebars": "1.0.x",
    "hogan.js": "2.0.0",
    "jade": "0.27.0"
  },
  "author": {
    "name": "Alexey Petrushin"
  },
  "readme": "# resourcify\n\nbrowserify.require() for templates and other resources, made as a set of\n[browserify](https://github.com/substack/node-browserify) plugins.\n\nUsually You need it to **precompile client-side templates and use it in Browser**.\n\nIt allows to work with resources (templates) using standard `require('./my-template')` as if\nit's an ordinary JavaScript file.\n\nNote: You can use [fileify](https://github.com/substack/node-fileify) to require all\nfiles (templates) in directory recursively.\n\n## Available plugins\n\n- eco - .eco\n- ejs - .ejs\n- handlebars - .hbs, .handlebars\n- hogan - .hg, .hogan\n- jade - .jade\n\nIt's also easy to add a new one. As a sample take a look\n at [eco](/alexeypetrushin/resourcify/blob/master/eco.js), it's about seven lines of code.\n\n## Installation\n\nInstall resourcify and template engine You want.\n\n``` shell\nnpm install resourcify jade\n```\n\nPlug resourcify into browserify\n\n``` shell\nbrowserify app.js -w -p resourcify/jade -o bundle.js\n```\n\n``` javascript\n...\nvar jade = require('resourcify/jade')\nbundle.use(jade)\n...\n```\n\nNow You can use `require('/my-template')` for `.jade` templates.",
  "_id": "resourcify@0.1.1",
  "_from": "resourcify"
}
